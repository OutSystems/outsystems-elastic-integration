input {
    jdbc {
        jdbc_driver_library => "${JDBC_LIBRARY}"
        jdbc_driver_class => "${JDBC_DRIVER_CLASS}"
        jdbc_connection_string => "${JDBC_CONNECTION_STRING}"
        jdbc_user => "${JDBC_USER}"
        jdbc_password => "${JDBC_PASSWORD}"
        last_run_metadata_path => "${LAST_RUN_DIR}/jdbc.extension.last_run"
        schedule => "${JDBC_SCHEDULE}"

        jdbc_paging_enabled => true
        tracking_column => "instant_unix"
        use_column_value => true
        tracking_column_type => "numeric"

        statement => "
            SELECT
                instant_unix            = DATEDIFF(SECOND,'2021-01-01', instant),
                application_action_name = e.[Action_Name],
                application_key         = e.[Application_Key],
                application_name        = e.[Application_Name],
                instant                 = e.[Instant],
                duration                = e.[Duration],
                import_latency          = DATEDIFF(minute,e.[Instant],GETDATE()),
                session_id              = e.[Session_Id],
                user_id                 = e.[User_Id],
                user_name               = e.username,
                application_espace_id   = e.[Espace_Id],
                tenant_id               = e.[Tenant_Id],
                extension_id            = e.[Extension_Id],
                extension_executor      = e.[Executed_By],
                error_id                = e.[Error_Id],
                request_key             = e.[Request_Key],
                application_espace_name = e.[Espace_Name],
                extension_name          = e.[Extension_Name]
            FROM [dbo].[oslog_Extension] (nolock) e
            WHERE DATEDIFF(SECOND,'2021-01-01', instant) > :sql_last_value
        "
    }
}

filter {
    #------------------------------------------------------------------------------#
    # Common part
    #------------------------------------------------------------------------------#
    mutate {
        add_field => {
            "[ecs][version]" => "1.5.0"
            "[outsystems][customer_name]" => "${DATA_CUSTOMER_NAME}"
            "[outsystems][location_name]" => "${DATA_LOCATION_NAME}"
            "[outsystems][environment_name]" => "${DATA_ENVIRONMENT_NAME}"
        }

        convert => [ "instant", "string" ] # we need to convert this to a string to be able to parse it into the @timestamp field

        remove_field => [ "instant_unix" ] # this field was only used for controling the query pagination, so we don't need to keep it
    }

    date {
        match => ["instant", "ISO8601"]
        timezone => "Etc/UTC"
    }

    mutate {
        rename => { "instant" => "[log][instant]" } # the value of this field is now in the @timestamp field, so we just keep it as a control value
    }

    #------------------------------------------------------------------------------#
    # Specific part
    #------------------------------------------------------------------------------#
    fingerprint {
        source => [
                "[instant]",
                "[session_id]",
                "[request_key]",
                "[extension_id]",
                "[application_action_name]",
                "[application_espace_id]",
                "[tenant_id]",
                "[duration]"
        ]
        target => "[@metadata][fingerprint]"
        method => "MURMUR3"
        concatenate_sources => true
    }

    mutate {
        add_field => { "[log][data_source]" => "Extension" }

        rename => {
            "application_action_name" => "[application][action_name]"
            "application_key" => "[application][key]"
            "application_name" => "[application][name]"
            "extension_executor" => "[extension][executor]"
            "application_espace_id" => "[application][espace_id]"
            "application_espace_name" => "[application][espace_name]"
            "extension_id" => "[extension][id]"
            "extension_name" => "[extension][name]"
            "import_latency" => "[import][latency]"
            "request_key" => "[request][key]"
            "session_id" => "[session][id]"
        }
    }

    range {
        ranges => [
                "duration",    0,         200, "field:duration_class:Good",
                "duration", 201, 999999999999, "field:duration_class:Bad"
        ]
    }
}

output {
    elasticsearch {
        hosts => "${ES_HOST}"
        user => "${ES_USER}"
        password => "${ES_PASS}"
        document_id => "%{[@metadata][fingerprint]}"
        ilm_enabled => true
        ilm_rollover_alias => "os-mon-log-extension"
        ilm_pattern => "000001"
        ilm_policy => "os-mon-log-ilm-policy"
    }
}
