input {
    file {
        path => "/usr/share/logstash/logs/Service-Action/*.csv"
        mode => read
        sincedb_path => "/dev/null"
    }
}

filter {
    mutate {
        gsub => [
            "message", "\r$", ""
        ]
    }
    csv {
        columns => [
            "Tenant_Id",
            "INSTANT",
            "User_Id",
            "Login_Id",
            "Session_Id",
            "Espace_Id",
            "Error_Id",
            "Executed_by",
            "REQUEST_KEY",
            "ENTRYPOINT_NAME",
            "ACTION_NAME",
            "DURATION",
            "SOURCE",
            "ENDPOINT",
            "Espace_Name",
            "Application_Name",
            "Application_Key",
            "USERNAME",
            "ORIGINAL_REQUEST_KEY"
        ]
        skip_header => true
    }
    mutate {
        convert => {
             "INSTANT" => "string" 
             "DURATION" => "integer"
        }
    }

    date {
        match => ["INSTANT", "dd-MM-yyyy HH:mm:ss", "yyyy-MM-dd HH:mm:ss", "ISO8601"]
        timezone => "Etc/UTC"
    }

    mutate {
        add_field => {
            "[ecs][version]" => "1.5.0"
            "[outsystems][customer_name]" => "${DATA_CUSTOMER_NAME}"
            "[outsystems][location_name]" => "${DATA_LOCATION_NAME}"
            "[outsystems][environment_name]" => "${DATA_ENVIRONMENT_NAME}"
            "[log][data_source]" => "ServiceAction"
        }

        rename => {
            "INSTANT" => "[log][instant]"
            "SOURCE" => "[application][client_ip]"
            "ACTION_NAME" => "[application][action_name]"
            "Espace_Id" => "[application][espace_id]"
            "Espace_Name" => "[application][espace_name]"
            "Executed_by" => "[service-action][executor]"
            "REQUEST_KEY" => "[request][key]"
            "ORIGINAL_REQUEST_KEY" => "[request][original_key]"
            "Application_Name" => "[application][name]"
            "Application_Key" => "[application][key]"
            "User_Id" => "[user][id]"
            "Login_Id" => "[login][id]"
            "Session_Id" => "[session][id]"
            "ENTRYPOINT_NAME" => "[application][entrypoint]"
        }

        remove_field => [ "path", "message" ]
    }

    range {
        ranges => [
            "DURATION",    0,         200, "field:duration_class:Good",
            "DURATION", 201, 999999999999, "field:duration_class:Bad"
        ]
    }

    fingerprint {
        source => [
            "[log][instant]",
            "[request][key]",
            "[application][client_ip]",
            "[application][action_name]",
            "[application][espace_id]",
            "[service-action][executor]",
            "[session][id]",
            "[DURATION]"
        ]
        target => "[@metadata][fingerprint]"
        method => "MURMUR3"
        concatenate_sources => true
    }
}

output {
#    stdout { codec => rubydebug }

    elasticsearch {
        hosts => "${ES_HOST}"
        user => "${ES_USER}"
        password => "${ES_PASS}"
        document_id => "%{[@metadata][fingerprint]}"
        ilm_enabled => true
        ilm_rollover_alias => "os-mon-log-service-action"
        ilm_pattern => "000001"
        ilm_policy => "os-mon-log-ilm-policy"
    }
}
