input {
    file {
        path => "/usr/share/logstash/logs/Timer/*.csv"
        mode => read
        sincedb_path => "/dev/null"
    }
}

filter {
    mutate {
        gsub => [
            "message", "\r$", ""
        ]
    }
    csv {
        columns => [
            "Tenant_Id",
            "INSTANT",
            "DURATION",
            "Cyclic_Job_Key",
            "Espace_Id",
            "Executed_By",
            "Error_Id",
            "Should_Have_Run_At",
            "Next_Run",
            "Request_Key",
            "Espace_Name",
            "Application_Name",
            "Application_Key",
            "Cyclic_Job_Name"
        ]
        skip_header => true
    }
    #Set duration if not present.
    if !["DURATION"] {
        mutate {
            add_field => {
                "DURATION" => 0
            }
        }
    }

    #Set error_id to empty string if not present
    if !["Error_Id"] {
        mutate {
            add_field => {
                "Error_Id" => ""
            }
        }
    }

    mutate {
        convert => {
             "INSTANT" => "string" 
             "DURATION" => "integer"
        }
    }

    date {
        match => ["INSTANT", "dd-MM-yyyy HH:mm:ss", "yyyy-MM-dd HH:mm:ss", "ISO8601"]
        timezone => "Etc/UTC"
    }

    mutate {
        add_field => {
            "[ecs][version]" => "1.5.0"
            "[outsystems][customer_name]" => "${DATA_CUSTOMER_NAME}"
            "[outsystems][location_name]" => "${DATA_LOCATION_NAME}"
            "[outsystems][environment_name]" => "${DATA_ENVIRONMENT_NAME}"
            "[log][data_source]" => "Timer"
        }

        copy => { "DURATION" => "[request_event][duration]" }

        rename => {
            "INSTANT" => "[log][instant]"
            "Cyclic_Job_Key" => "[timer][key]"
            "Espace_Id" => "[application][espace_id]"
            "Espace_Name" => "[application][espace_name]"
            "Executed_by" => "[timer][executor]"
            "Should_Have_Run_At" => "[timer][last_run]"
            "Next_Run" => "[timer][next_run]"
            "Request_Key" => "[request][key]"
            "Application_Name" => "[application][name]"
        }

        remove_field => [ "path", "message" ]
    }

    fingerprint {
        source => ["[request][key]", "[log][instant]", "[timer][key]"]
        target => "[@metadata][fingerprint]"
        method => "MURMUR3"
        concatenate_sources => true
    }
}

output {
#    stdout { codec => rubydebug }

    elasticsearch {
        hosts => "${ES_HOST}"
        user => "${ES_USER}"
        password => "${ES_PASS}"
        document_id => "%{[@metadata][fingerprint]}"
        ilm_enabled => true
        ilm_rollover_alias => "os-mon-log-timer"
        ilm_pattern => "000001"
        ilm_policy => "os-mon-log-ilm-policy"
    }
}
