input {
    file {
        path => "/usr/share/logstash/logs/General/*.csv"
        mode => read
        sincedb_path => "/dev/null"

        codec => multiline {
          pattern => "^\d+,"
          negate => true
          what => "previous"
        }
    }
}

filter {
    mutate {
        gsub => [
            "message", "\r$", ""
        ]
    }
    csv {
        columns => [
            "Tenant_Id",
            "INSTANT",
            "Session_Id",
            "User_Id",
            "Espace_Id",
            "Error_Id",
            "MESSAGE",
            "Message_Type",
            "Module_Name",
            "Request_Key",
            "Entrypoint_Name",
            "Action_Name",
            "Client_IP",
            "Espace_Name",
            "Application_Name",
            "Application_Key",
            "USERNAME"
        ]
        skip_header => true
    }
    mutate {
        rename => { "MESSAGE" => "message_text" }
        convert => [ "INSTANT", "string" ]
    }

    date {
        match => ["INSTANT", "dd-MM-yyyy HH:mm:ss", "yyyy-MM-dd HH:mm:ss", "ISO8601"]
        timezone => "Etc/UTC"
    }

    grok {
        patterns_dir => ["${PATTERNS_DIR}"]
        match => { "message_text" => "%{SPACE}%{MESSAGE_OBJECT:[details][object]}%{SPACE}%{WORD}%{SPACE}%{NUMBER:[details][duration]}%{GREEDYDATA}" }
    }

    mutate {
        add_field => {
            "[ecs][version]" => "1.5.0"
            "[outsystems][customer_name]" => "${DATA_CUSTOMER_NAME}"
            "[outsystems][location_name]" => "${DATA_LOCATION_NAME}"
            "[outsystems][environment_name]" => "${DATA_ENVIRONMENT_NAME}"
            "[log][data_source]" => "General"
        }

        rename => {
            "INSTANT" => "[log][instant]"
            "Session_Id" => "[session][id]"
            "Espace_Id" => "[application][espace_id]"
            "Espace_Name" => "[application][espace_name]"
            "Request_Key" => "[request][key]"
            "Application_Name" => "[application][name]"
            "Action_Name" => "[application][action_name]"
            "Module_Name" => "[application][module_name]"
            "Entrypoint_Name" => "[application][entrypoint_name]"
            "Message_Type" => "[details][type]"
            "message_text" => "[details][text]"
        }

        convert => {
            "[details][duration]" => "integer"
        }

        remove_field => [ "path", "message" ]
    }

    fingerprint {
        source => ["[request][key]", "[log][instant]", "[details][text]"]
        target => "[@metadata][fingerprint]"
        method => "MURMUR3"
        concatenate_sources => true
    }
}

output {
#    stdout { codec => rubydebug }

    elasticsearch {
        hosts => "${ES_HOST}"
        user => "${ES_USER}"
        password => "${ES_PASS}"
        document_id => "%{[@metadata][fingerprint]}"
        ilm_enabled => true
        ilm_rollover_alias => "os-mon-log-general"
        ilm_pattern => "000001"
        ilm_policy => "os-mon-log-ilm-policy"
    }
}
